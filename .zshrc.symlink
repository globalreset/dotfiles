
# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
export PATH=$HOME/bin:$PATH

#ZSH_DISABLE_COMPFIX=true

if [ -f ~/.zshrc.local ]; then
  source ~/.zshrc.local
fi

if [ -f /home/linuxbrew/.linuxbrew/bin/brew ]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
elif [ -f ~/.linuxbrew/bin/brew ]; then
  eval "$(~/.linuxbrew/bin/brew shellenv)"
fi

if hash brew 2>/dev/null; then 
  export fpath=($(brew --prefix)/share/zsh/functions $(brew --prefix)/share/zsh/site-functions $fpath)
  #[ -f $(brew --prefix)/etc/profile.d/autojump.sh ] && . $(brew --prefix)/etc/profile.d/autojump.sh
fi

if [ -x ~/.zsh.d/ ]; then
  export fpath=(~/.zsh.d $fpath)
fi

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
zstyle ':omz:update' frequency 30

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"
# HISTFILE=~/.zsh_history
export HISTFILESIZE=1000000000
export HISTSIZE=1000000000
export SAVEHIST=1000000
export HISTTIMEFORMAT="[%F %T] "
setopt HIST_IGNORE_ALL_DUPS
setopt INC_APPEND_HISTORY
setopt EXTENDED_HISTORY

setopt appendhistory autocd beep extendedglob nomatch notify
setopt CDABLE_VARS

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
   branch
   brew
   dirhistory
   dotenv
   fzf-zsh-plugin
   git
   #git-branches
   git-extras
   rake
   rbenv
   ruby
   tmux
   tmuxinator
   vi-mode
   zsh-autosuggestions
   zsh-interactive-cd
   zsh-navigation-tools
   zsh-syntax-highlighting
   )

if [ -x $HOME/.oh-my-zsh ]; then
  source $ZSH/oh-my-zsh.sh

  #source ~/zsh-git-prompt/zshrc.sh
  #function git_prompt_info() {
  #    ref=$(/home/scotth/bin/git-branch-name -q -h 12 -b 64) || return
  #    #echo "${ZSH_THEME_GIT_PROMPT_PREFIX}${ref}${ZSH_THEME_GIT_PROMPT_CLEAN}${ZSH_THEME_GIT_PROMPT_SUFFIX}"
  #    echo "%{$fg[yellow]%}(${ref})%{$reset_color%}"
  #}
  
  NEWLINE=$'\n'
  PROMPT='${NEWLINE}%{$fg[magenta]%}${USER}@%m %{$fg_bold[cyan]%}%~%{$reset_color%} %{$fg_bold[yellow]%}$(branch_prompt_info)%{$reset_color%}${NEWLINE}%(?:%{%}➜ :%{%}➜ )'
  RPROMPT=''
else
  echo "run ~/dotfiles/scripts/setup_ohmyzsh.sh"
fi

# User configuration

if hash thefuck 2>/dev/null; then eval "$(thefuck --alias)"; fi
if hash lesspipe.sh 2>/dev/null; then eval "$(lesspipe.sh)"; fi
if hash zoxide 2>/dev/null; then eval "$(zoxide init --cmd j zsh)"; fi
if hash bat 2>/dev/null; then alias cat='bat'; fi

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8n

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
source ~/.aliases

alias scrls='screen -list | grep "Detached" | sed -e "s/^.*[0-9]\+\.\([a-zA-Z_0-9\-]\+\).*$/\1/"'
alias scr='screen -x -R'

_scrls() {
    reply=($(scrls))
}

# setup completion
compctl -K _scrls scr

export TMPDIR=/tmp/
export PAGER='less -FRX'
export EDITOR='vim'
export VISUAL='gvim -f'

#export GREP_OPTIONS="--color=auto"

export LESS="-iFXR"

export HOMEBREW_CURLRC=0
export RIPGREP_CONFIG_PATH=~/.ripgreprc

fpath=(~/.zsh.d/ $fpath)

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
